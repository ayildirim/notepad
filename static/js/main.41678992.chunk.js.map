{"version":3,"sources":["withTracker.js","Pages/Main.js","Pages/SingleNote.js","AppRouter.js","App.js","registerServiceWorker.js","index.js"],"names":["withTracker","WrappedComponent","extraProps","arguments","length","undefined","options","trackPage","page","ReactGA","set","Object","objectSpread","pageview","_Component","HOC","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","location","pathname","nextProps","currentPage","nextPage","react_default","a","createElement","assign","Component","Main","Container_default","SingleNote","_this","call","state","data","Row_default","Col_default","md","className","Button_default","variant","onClick","exportPDF","Pages","component","link","camelize","str","replace","match","chr","toUpperCase","AppRouter","HashRouter","Navbar_default","bg","expand","Brand","href","Collapse","id","Nav_default","map","Link","concat","Alert_default","esm","OutboundLink","eventLabel","to","target","Toggle","aria-controls","Route","path","exact","App","initialize","testMode","process","src_AppRouter","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41678992.chunk.js","sourcesContent":["/**\n * From ReactGA Community Wiki Page https://github.com/react-ga/react-ga/wiki/React-Router-v4-withTracker\n */\n\nimport React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nexport default function withTracker(WrappedComponent, extraProps = {}, options = {}) {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = class extends Component {\n    componentDidMount() {\n      const page = this.props.location.pathname;\n      trackPage(page);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const currentPage = this.props.location.pathname;\n      const nextPage = nextProps.location.pathname;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...extraProps} />;\n    }\n  };\n\n  return HOC;\n}\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/lib/Container';\n\nclass Main extends Component {\n  render() {\n    return <Container />;\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport Container from 'react-bootstrap/lib/Container';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\n\nclass SingleNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  render() {\n    const { data } = this.state;\n    if (data.length === 0) return <div />;\n    return (\n      <Container>\n        <Row>\n          <Col md={12} className=\"d-flex justify-content-center\">\n            <Button variant=\"primary\" onClick={this.exportPDF}>\n              Download PDF\n            </Button>\n          </Col>\n          <Col md={12} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default SingleNote;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Nav from 'react-bootstrap/lib/Nav';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport Alert from 'react-bootstrap/lib/Alert';\nimport ReactGA from 'react-ga';\nimport withTracker from './withTracker';\n\n// Pages\nimport Main from './Pages/Main';\nimport SingleNote from './Pages/SingleNote';\n\nconst Pages = [{ component: Main, link: 'Home' }, { component: SingleNote, link: 'SingleNote' }];\n\nconst camelize = function camelize(str) {\n  return str.replace(/\\W+(.)/g, (match, chr) => chr.toUpperCase());\n};\n\nclass AppRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/#/home\">Notepad</Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                {Pages.map(page => (\n                  <Nav.Link href={`/#/${camelize(page.link)}`}>{page.link}</Nav.Link>\n                ))}\n              </Nav>\n            </Navbar.Collapse>\n            <Alert key=\"info\" variant=\"info\">\n              {'Under construction - '}\n              <ReactGA.OutboundLink\n                eventLabel=\"https://github.com/ayildirim/notepad\"\n                to=\"https://github.com/ayildirim/notepad\"\n                target=\"_blank\"\n              >\n                See what's cooking\n              </ReactGA.OutboundLink>\n            </Alert>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          </Navbar>\n          <Route path=\"/\" exact component={withTracker(Main)} />\n          {Pages.map(page => (\n            <Route path={`/${camelize(page.link)}`} exact component={withTracker(page.component)} />\n          ))}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nimport AppRouter from './AppRouter';\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGA.initialize('UA-129029377-1', { testMode: process.env.NODE_ENV === 'test' });\n  }\n\n  render() {\n    return <AppRouter />;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}