{"version":3,"sources":["withTracker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/PasswordChange/index.js","components/Account/index.js","Config.js","components/Notes/index.js","withBackend.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["withTracker","WrappedComponent","extraProps","arguments","length","undefined","options","trackPage","page","ReactGA","set","Object","objectSpread","pageview","_Component","HOC","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","location","pathname","nextProps","currentPage","nextPage","react_default","a","createElement","assign","Component","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","db","ref","concat","users","messages","app","initializeApp","emailAuthProvider","EmailAuthProvider","database","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","call","state","JSON","parse","localStorage","getItem","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","NOTES","withAuthorization","condition","WithAuthorization","_this$props","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","Nav_default","className","Link","href","ROUTES","SignOut","NavigationNonAuth","Navigation","Navbar_default","bg","expand","Brand","Collapse","id","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Alert_default","variant","esm","OutboundLink","eventLabel","to","target","Toggle","aria-controls","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","catch","preventDefault","onChange","defineProperty","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUp","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","code","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","SIGN_IN_METHODS","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","isEnabled","includes","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","API_URL","NotesPage","data","backend","Container_default","Row_default","Col_default","md","Card_default","Body","Title","Form_default","Group","controlId","Control","as","rows","e","Button_default","putDataToDB","dat","i","deleteFromDB","_id","refreshUI","getDataFromDb","res","Backend","_getPrototypeOf2","_len","args","Array","_key","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","fetch","sent","abrupt","json","stop","userId","axios","post","idTodelete","delete","updateDB","idToUpdate","updateToApply","update","BrowserRouter","components_Navigation","Route","exact","path","component","SignUpPage","AccountPage","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialize","testMode","process","ReactDOM","render","Firebase_context","components_App","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54c6ba32.chunk.js","sourcesContent":["/**\n * From ReactGA Community Wiki Page https://github.com/react-ga/react-ga/wiki/React-Router-v4-withTracker\n */\n\nimport React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nexport default function withTracker(WrappedComponent, extraProps = {}, options = {}) {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = class extends Component {\n    componentDidMount() {\n      const page = this.props.location.pathname;\n      trackPage(page);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const currentPage = this.props.location.pathname;\n      const nextPage = nextProps.location.pathname;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...extraProps} />;\n    }\n  };\n\n  return HOC;\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst prodConfig = {\n  apiKey: 'AIzaSyD3568Uh4KVxHm9N7ibZohQ1bp9ChVttXQ',\n  authDomain: 'notepad-d8d76.firebaseapp.com',\n  databaseURL: 'https://notepad-d8d76.firebaseio.com',\n  projectId: 'notepad-d8d76',\n  storageBucket: 'notepad-d8d76.appspot.com',\n  messagingSenderId: '1018760532537',\n};\n\nconst devConfig = {\n  apiKey: 'AIzaSyD3568Uh4KVxHm9N7ibZohQ1bp9ChVttXQ',\n  authDomain: 'notepad-d8d76.firebaseapp.com',\n  databaseURL: 'https://notepad-d8d76.firebaseio.com',\n  projectId: 'notepad-d8d76',\n  storageBucket: 'notepad-d8d76.appspot.com',\n  messagingSenderId: '1018760532537',\n};\n\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n    this.auth = app.auth();\n    this.db = app.database();\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) => this.auth.onAuthStateChanged((authUser) => {\n    if (authUser) {\n      this.user(authUser.uid)\n        .once('value')\n        .then((snapshot) => {\n          const dbUser = snapshot.val();\n\n          // merge auth and db user\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            ...dbUser,\n          };\n\n          next(authUser);\n        });\n    } else {\n      fallback();\n    }\n  });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const { authUser } = this.state;\n\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ACCOUNT = '/account';\nexport const NOTES = '/notes';\nexport const DEFAULT = '/';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (condition(authUser) ? <Component {...this.props} /> : null)}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport Nav from 'react-bootstrap/lib/Nav';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport Alert from 'react-bootstrap/lib/Alert';\nimport ReactGA from 'react-ga';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n  <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"/\">Notepad</Navbar.Brand>\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <AuthUserContext.Consumer>\n        {authUser => (authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />)}\n      </AuthUserContext.Consumer>\n    </Navbar.Collapse>\n    <Alert key=\"info\" variant=\"info\">\n      {'Under construction - '}\n      <ReactGA.OutboundLink\n        eventLabel=\"https://github.com/ayildirim/notepad\"\n        to=\"https://github.com/ayildirim/notepad\"\n        target=\"_blank\"\n      >\n        {\"See what's cooking\"}\n      </ReactGA.OutboundLink>\n    </Alert>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  </Navbar>\n);\nconst NavigationAuth = ({ authUser }) => (\n  <Nav className=\"mr-auto\">\n    <Nav.Link href={ROUTES.NOTES}>Notes</Nav.Link>\n    <Nav.Link href={ROUTES.ACCOUNT}>Account</Nav.Link>\n    <SignOutButton />\n  </Nav>\n);\n\nconst NavigationNonAuth = () => (\n  <Nav className=\"mr-auto\">\n    <Nav.Link href={ROUTES.SIGN_IN}>Sign in</Nav.Link>\n  </Nav>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch((error) => {\n            this.setState({ error });\n          });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username, email, passwordOne, passwordTwo, error,\n    } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || username === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    {' '}\n    <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social login already exists. Try to login from\n  this account instead and associate your social logins on\n  your account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.NOTES);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.user.displayName,\n            email: socialAuthUser.user.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>\nAccount:\n          {authUser.email}\n        </h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: '',\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods => this.setState({ activeSignInMethods, error: null }))\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft, isEnabled, signInMethod, onLink, onUnlink,\n}) => (isEnabled ? (\n  <button type=\"button\" onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n      Deactivate\n    {' '}\n    {signInMethod.id}\n  </button>\n) : (\n  <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link\n    {' '}\n    {signInMethod.id}\n  </button>\n));\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { passwordOne } = this.state;\n\n    this.props.onLink(passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft, isEnabled, signInMethod, onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button type=\"button\" onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n        Deactivate\n        {' '}\n        {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link\n          {' '}\n          {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","export const API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'http://notepad.ahmet.se:3001';\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/lib/Container';\nimport Button from 'react-bootstrap/lib/Button';\nimport Card from 'react-bootstrap/lib/Card';\nimport Col from 'react-bootstrap/lib/Col';\nimport Row from 'react-bootstrap/lib/Row';\nimport Form from 'react-bootstrap/lib/Form';\nimport { compose } from 'recompose';\n\nimport withBackend from '../../withBackend';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nclass NotesPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      message: null,\n    };\n  }\n\n  // here is our UI\n  // it is easy to understand their functions when you\n  // see them render into our screen\n  render() {\n    const { data } = this.state;\n    const { backend } = this.props;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col md={12}>\n                <Card>\n                  <Card.Body>\n                    <Card.Title>\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={e => this.setState({ message: e.target.value })}\n                          placeholder=\"add something in the database\"\n                        />\n                      </Form.Group>\n                    </Card.Title>\n                    <Button onClick={() => backend.putDataToDB(this.state.message, authUser.uid)}>\n                      Save\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n              {data.length <= 0\n                ? 'You have not taken any notes.'\n                : data.map((dat, i) => (\n                  <Col md={12} key={`key${i}`}>\n                    <Card>\n                      <Card.Body>\n                        <Card.Title>{dat.message}</Card.Title>\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => backend.deleteFromDB(dat._id, authUser.uid)}\n                        >\n                            Delete\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                ))}\n            </Row>\n          </Container>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n\n  componentDidMount() {\n    this.refreshUI();\n  }\n\n  async refreshUI() {\n    const { backend } = this.props;\n    backend.getDataFromDb().then(res => this.setState({ data: res.data }));\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withBackend,\n  withAuthorization(condition),\n)(NotesPage);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API_URL } from './Config';\n\nexport default function withBackend(WrappedComponent) {\n  const Backend = class extends Component {\n    getDataFromDb = async () => {\n      const res = await fetch(`${API_URL}/api/getData`);\n      return res.json();\n    };\n\n    putDataToDB = (message, userId) => {\n      axios.post(`${API_URL}/api/putData`, {\n        message,\n      });\n    };\n\n    deleteFromDB = (idTodelete, userId) => {\n      axios.delete(`${API_URL}/api/deleteData`, {\n        data: {\n          _id: idTodelete,\n        },\n      });\n    };\n\n    updateDB = (idToUpdate, updateToApply) => {\n      axios.post(`${API_URL}/api/updateData`, {\n        id: idToUpdate,\n        update: { message: updateToApply },\n      });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} backend={this} />;\n    }\n  };\n\n  return Backend;\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport withTracker from '../../withTracker';\n\nimport Navigation from '../Navigation';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport AccountPage from '../Account';\nimport NotesPage from '../Notes';\nimport { withAuthentication } from '../Session';\nimport * as ROUTES from '../../constants/routes';\n\nconst App = () => (\n  <Router>\n    <div className=\"app\">\n      <Navigation />\n      <hr />\n      <Route exact path={ROUTES.DEFAULT} component={withTracker(NotesPage)} />\n      <Route exact path={ROUTES.NOTES} component={withTracker(NotesPage)} />\n      <Route exact path={ROUTES.SIGN_UP} component={withTracker(SignUpPage)} />\n      <Route exact path={ROUTES.SIGN_IN} component={withTracker(SignInPage)} />\n      <Route exact path={ROUTES.PASSWORD_FORGET} component={withTracker(PasswordForgetPage)} />\n      <Route exact path={ROUTES.ACCOUNT} component={withTracker(AccountPage)} />\n      <hr />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactGA.initialize('UA-129029377-1', { testMode: process.env.NODE_ENV === 'test' });\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\nregisterServiceWorker();\n"],"sourceRoot":""}