{"version":3,"sources":["withTracker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/PasswordChange/index.js","components/Account/index.js","Config.js","components/Notes/index.js","withBackend.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["withTracker","WrappedComponent","extraProps","arguments","length","undefined","options","trackPage","page","ReactGA","set","Object","objectSpread","pageview","_Component","HOC","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","location","pathname","nextProps","currentPage","nextPage","react_default","a","createElement","assign","Component","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","_ref","asyncToGenerator","regenerator_default","mark","_callee","authUser","jwt","wrap","_context","prev","getIdToken","sent","user","uid","once","then","snapshot","dbUser","val","stop","_x","db","ref","concat","users","messages","app","initializeApp","emailAuthProvider","EmailAuthProvider","database","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","call","state","JSON","parse","localStorage","getItem","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","NOTES","withAuthorization","condition","WithAuthorization","_this$props","history","push","compose","withRouter","type","onClick","NavigationAuth","Nav_default","className","Link","href","ROUTES","SignOut","NavigationNonAuth","Navigation","Navbar_default","bg","expand","Brand","Collapse","id","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Alert_default","variant","esm","OutboundLink","eventLabel","to","target","Toggle","aria-controls","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","catch","preventDefault","onChange","defineProperty","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUp","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","code","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","SIGN_IN_METHODS","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","isEnabled","includes","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","API_URL","NotesPage","data","backend","Container_default","Row_default","Col_default","md","Card_default","Body","Title","Form_default","Group","controlId","Control","as","rows","e","Button_default","putDataToDB","dat","i","deleteFromDB","_id","refreshUI","getDataFromDb","res","Backend","_getPrototypeOf2","_len","args","Array","_key","axios","post","abrupt","idTodelete","delete","updateDB","idToUpdate","updateToApply","update","HashRouter","components_Navigation","Route","exact","path","component","SignUpPage","AccountPage","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialize","testMode","process","ReactDOM","render","Firebase_context","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.38818de4.chunk.js","sourcesContent":["/**\n * From ReactGA Community Wiki Page https://github.com/react-ga/react-ga/wiki/React-Router-v4-withTracker\n */\n\nimport React, { Component } from 'react';\nimport ReactGA from 'react-ga';\n\nexport default function withTracker(WrappedComponent, extraProps = {}, options = {}) {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = class extends Component {\n    componentDidMount() {\n      const page = this.props.location.pathname;\n      trackPage(page);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const currentPage = this.props.location.pathname;\n      const nextPage = nextProps.location.pathname;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...extraProps} />;\n    }\n  };\n\n  return HOC;\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst prodConfig = {\n  apiKey: 'AIzaSyD3568Uh4KVxHm9N7ibZohQ1bp9ChVttXQ',\n  authDomain: 'notepad-d8d76.firebaseapp.com',\n  databaseURL: 'https://notepad-d8d76.firebaseio.com',\n  projectId: 'notepad-d8d76',\n  storageBucket: 'notepad-d8d76.appspot.com',\n  messagingSenderId: '1018760532537',\n};\n\nconst devConfig = {\n  apiKey: 'AIzaSyD3568Uh4KVxHm9N7ibZohQ1bp9ChVttXQ',\n  authDomain: 'notepad-d8d76.firebaseapp.com',\n  databaseURL: 'https://notepad-d8d76.firebaseio.com',\n  projectId: 'notepad-d8d76',\n  storageBucket: 'notepad-d8d76.appspot.com',\n  messagingSenderId: '1018760532537',\n};\n\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n    this.auth = app.auth();\n    this.db = app.database();\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) => this.auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      const jwt = await authUser.getIdToken();\n      this.user(authUser.uid)\n        .once('value')\n        .then((snapshot) => {\n          const dbUser = snapshot.val();\n\n          // merge auth and db user\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            jwt,\n            ...dbUser,\n          };\n\n          next(authUser);\n        });\n    } else {\n      fallback();\n    }\n  });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const { authUser } = this.state;\n\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ACCOUNT = '/account';\nexport const NOTES = '/notes';\nexport const DEFAULT = '/';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (condition(authUser) ? <Component {...this.props} /> : null)}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport Nav from 'react-bootstrap/lib/Nav';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport Alert from 'react-bootstrap/lib/Alert';\nimport ReactGA from 'react-ga';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n  <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"/\">Notepad</Navbar.Brand>\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <AuthUserContext.Consumer>\n        {authUser => (authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />)}\n      </AuthUserContext.Consumer>\n    </Navbar.Collapse>\n    <Alert key=\"info\" variant=\"info\">\n      {'Under construction - '}\n      <ReactGA.OutboundLink\n        eventLabel=\"https://github.com/ayildirim/notepad\"\n        to=\"https://github.com/ayildirim/notepad\"\n        target=\"_blank\"\n      >\n        {\"See what's cooking\"}\n      </ReactGA.OutboundLink>\n    </Alert>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  </Navbar>\n);\nconst NavigationAuth = ({ authUser }) => (\n  <Nav className=\"mr-auto\">\n    <Nav.Link href={`/#${ROUTES.NOTES}`}>Notes</Nav.Link>\n    <Nav.Link href={`/#${ROUTES.ACCOUNT}`}>Account</Nav.Link>\n    <SignOutButton />\n  </Nav>\n);\n\nconst NavigationNonAuth = () => (\n  <Nav className=\"mr-auto\">\n    <Nav.Link href={`/#${ROUTES.SIGN_IN}`}>Sign in</Nav.Link>\n  </Nav>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch((error) => {\n            this.setState({ error });\n          });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username, email, passwordOne, passwordTwo, error,\n    } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || username === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    {' '}\n    <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social login already exists. Try to login from\n  this account instead and associate your social logins on\n  your account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.NOTES);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.user.displayName,\n            email: socialAuthUser.user.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email\n          })\n          .then(() => {\n            this.setState({ error: null });\n            this.props.history.push(ROUTES.NOTES);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>\nAccount:\n          {authUser.email}\n        </h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: '',\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods => this.setState({ activeSignInMethods, error: null }))\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft, isEnabled, signInMethod, onLink, onUnlink,\n}) => (isEnabled ? (\n  <button type=\"button\" onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n      Deactivate\n    {' '}\n    {signInMethod.id}\n  </button>\n) : (\n  <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link\n    {' '}\n    {signInMethod.id}\n  </button>\n));\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { passwordOne } = this.state;\n\n    this.props.onLink(passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft, isEnabled, signInMethod, onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button type=\"button\" onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n        Deactivate\n        {' '}\n        {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link\n          {' '}\n          {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","export const API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'http://notepad.ahmet.se:3001';\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/lib/Container';\nimport Button from 'react-bootstrap/lib/Button';\nimport Card from 'react-bootstrap/lib/Card';\nimport Col from 'react-bootstrap/lib/Col';\nimport Row from 'react-bootstrap/lib/Row';\nimport Form from 'react-bootstrap/lib/Form';\nimport { compose } from 'recompose';\n\nimport withBackend from '../../withBackend';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nclass NotesPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      message: null,\n    };\n  }\n\n  // here is our UI\n  // it is easy to understand their functions when you\n  // see them render into our screen\n  render() {\n    const { data, message } = this.state;\n    const { backend } = this.props;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col md={12}>\n                <Card>\n                  <Card.Body>\n                    <Card.Title>\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={e => this.setState({ message: e.target.value })}\n                          placeholder=\"add something in the database\"\n                        />\n                      </Form.Group>\n                    </Card.Title>\n                    <Button onClick={() => backend.putDataToDB(message)}>Save</Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n              {data.length <= 0\n                ? 'You have not taken any notes.'\n                : data.map((dat, i) => (\n                  <Col md={12} key={`key${i}`}>\n                    <Card>\n                      <Card.Body>\n                        <Card.Title>{dat.message}</Card.Title>\n                        <Button variant=\"danger\" onClick={() => backend.deleteFromDB(dat._id)}>\n                            Delete\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                ))}\n            </Row>\n          </Container>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n\n  componentDidMount() {\n    this.refreshUI();\n  }\n\n  async refreshUI() {\n    const { backend } = this.props;\n    backend.getDataFromDb().then(res => this.setState({ data: res.data }));\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withBackend,\n  withAuthorization(condition),\n)(NotesPage);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withFirebase } from './components/Firebase';\nimport { withAuthentication, withAuthorization } from './components/Session';\nimport { API_URL } from './Config';\n\nexport default function withBackend(WrappedComponent) {\n  const Backend = class extends Component {\n    getDataFromDb = async () => {\n      const res = await axios.post(`${API_URL}/api/getData`, {\n        jwt: JSON.parse(localStorage.getItem('authUser')).jwt,\n      });\n      return res.data;\n    };\n\n    putDataToDB = (message) => {\n      axios.post(`${API_URL}/api/putData`, {\n        message,\n        jwt: JSON.parse(localStorage.getItem('authUser')).jwt,\n      });\n    };\n\n    deleteFromDB = (idTodelete) => {\n      axios.delete(`${API_URL}/api/deleteData`, {\n        data: {\n          _id: idTodelete,\n          jwt: JSON.parse(localStorage.getItem('authUser')).jwt,\n        },\n      });\n    };\n\n    updateDB = (idToUpdate, updateToApply) => {\n      axios.post(`${API_URL}/api/updateData`, {\n        id: idToUpdate,\n        update: { message: updateToApply },\n        jwt: JSON.parse(localStorage.getItem('authUser')).jwt,\n      });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} backend={this} />;\n    }\n  };\n\n  return Backend;\n}\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport withTracker from '../../withTracker';\n\nimport Navigation from '../Navigation';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport AccountPage from '../Account';\nimport NotesPage from '../Notes';\nimport { withAuthentication } from '../Session';\nimport * as ROUTES from '../../constants/routes';\n\nconst App = () => (\n  <Router>\n    <div className=\"app\">\n      <Navigation />\n      <hr />\n      <Route exact path={ROUTES.DEFAULT} component={withTracker(NotesPage)} />\n      <Route exact path={ROUTES.NOTES} component={withTracker(NotesPage)} />\n      <Route exact path={ROUTES.SIGN_UP} component={withTracker(SignUpPage)} />\n      <Route exact path={ROUTES.SIGN_IN} component={withTracker(SignInPage)} />\n      <Route exact path={ROUTES.PASSWORD_FORGET} component={withTracker(PasswordForgetPage)} />\n      <Route exact path={ROUTES.ACCOUNT} component={withTracker(AccountPage)} />\n      <hr />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactGA.initialize('UA-129029377-1', { testMode: process.env.NODE_ENV === 'test' });\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\nregisterServiceWorker();\n"],"sourceRoot":""}